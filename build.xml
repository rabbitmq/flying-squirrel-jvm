<project name="RabbitSocksAPIJavaClient" default="dist" basedir=".">

	<description>
        Build script for the RabbitSocksAPI Java client
  </description>

	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="lib" location="lib" />
	<property name="tests-report" location="tests-report" />

	<path id="lib-classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" classpathref="lib-classpath" debug="on" />
	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib" />

		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/lib/rabbit-socks-api-http-client.jar" basedir="${build}" excludes="**/*Test.class" />
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${tests-report}" />
	</target>

	<target name="tests" depends="compile">
		<mkdir dir="${tests-report}" />
		<junit printsummary="yes" haltonfailure="yes" haltonerror="yes" showoutput="yes">
			<classpath>
				<pathelement location="${build}" />
				<path refid="lib-classpath" />
			</classpath>
			<formatter type="plain" />
			<batchtest fork="no" todir="${tests-report}">
				<fileset dir="${src}">
					<include name="**/client/**/*Test.java" />
					<exclude name="**/stress/**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>
